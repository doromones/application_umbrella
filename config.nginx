server {
    listen 80;
    listen [::]:80;
    server_name server.dev, api.server.dev;

    return 301 https://$host$request_uri;
}

upstream server {
    server localhost:4000;
}

upstream server_admin {
    server localhost:4001;
}

upstream server_api {
    server localhost:4002;
}

# for upstream server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name server.dev www.server.dev;

    # paths to certificate and key provided by Let's Encrypt
    ssl_certificate /home/user/Projects/Elixir/application_umbrella/nginx/dev_ssl/_wildcard.server.dev+1.pem;
    ssl_certificate_key /home/user/Projects/Elixir/application_umbrella/nginx/dev_ssl/_wildcard.server.dev+1-key.pem;

    # SSL settings that currently offer good results in the SSL check
    # and have a reasonable backwards-compatibility, taken from
    # - https://cipherli.st/
    # - https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /home/user/Projects/Elixir/application_umbrella/nginx/dev_ssl/dhparam.pem;

    # besides referencing the extracted upstream this stays the same
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://server;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}